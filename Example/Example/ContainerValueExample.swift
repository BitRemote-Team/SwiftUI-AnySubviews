//
//  ContainerValueExample.swift
//  AnySubviews
//
//  Created by Lumisilk on 2024/08/03.
//

import SwiftUI
import AnySubviews

struct ContainerValueExample: View {
    var body: some View {
        VStack {
            BackportGroup(subviews: content) { subviews in
                Text("Original View:")
                subviews
                
                Text("Custom Container Values:")
                
                ForEach(subviews) { subview in
                    let number = subview.containerValues[\.myNumber]?.description ?? "nil"
                    let name = subview.containerValues[\.myName] ?? "nil"
                    Text(number + " " + name)
                }
            }
        }
    }
    
    var content: some View {
        Group {
            Text("Default Value: 0 Name")
            
            Text("Custom: 1 Lumi")
                .anyContainerValue(keyPath: \.myNumber, 1)
                .anyContainerValue(keyPath: \.myName, "Lumi")
        }
    }
}

extension AnyContainerValueKeys {
    #AnyEntry<Int>("myNumber", 0)
    #AnyEntry<String>("myName", "Name")
}

// Generated By Macro
//extension AnyContainerValueKeys {
//    var myNumber: __Key_myValue.Type {
//        __Key_myNumber.self
//    }
//    
//    enum __Key_myNumber: AnyContainerValueKey, ContainerValueKey {
//        static var defaultValue: Int { 0 }
//        
//        @available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)
//        static var containerKeyPath: WritableKeyPath<ContainerValues, Int> {
//            \ContainerValues.delegate.myNumber
//        }
//    }
//}

#Preview {
    ContainerValueExample()
}
